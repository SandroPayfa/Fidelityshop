
var Form = (id,car) => {
    var all = ["input","select","textarea"],data = {},error = {},er = 0,f = true,f;
    for (i = 0; i < all.length; i++) {
        var el = document.querySelectorAll("#"+id+" "+all[i]);
        for (y = 0; y < el.length; y++) {
            var current = el[y],name = current.getAttribute("name"),value = current.value,Ty = current.getAttribute("type");
            if(typeof name != "undefined" && !empty(name)){
                data[name] = value;
                if (all[i] == "input" && typeof Ty != "undefined" && Ty == "checkbox") {
                    
                    if (typeof car == "object" && typeof car[name] == "string"  && car[name] == "noForget" && !current.checked) {error[name] = "empty";}
                    if (!current.checked) {
                        data[name] = "";
                    }
                }
                else{
                    if (typeof car == "object" && typeof car[name] != "undefined") {
                        var car_ = car[name];
                        if ( typeof car_.empty != "undefined" && !car_.empty && empty(value)) {error[name] = "empty";}
                        if(!empty(value) && typeof error[name] == "undefined" && typeof car_.type != "undefined" && !contentType(value,car_.type)){error[name] = "type";}
                        if (!empty(value) && typeof error[name] == "undefined" && typeof car_.limit != "undefined" && !limit(value,car_.limit)){error[name] = "limit";}
                    }
                }
                if (typeof error[name] != "undefined") {er++;}
            }
        }
    }
    ans = data;
    if (er != 0) {ans = error;f = false;}
    ans.reponse = f;
    return ans;
}
function contentType(t,type){
    var reg, elementReturn = true,t = t;
    if(typeof type != "undefined"){
       switch(type.trim()){
           case "int" :case "digital": reg = "[0-9]+(.)?[0-9]?$"; break;
           case "alpha":case "char" : reg = "^[a-zA-Z0-9 ,;:!?@ ' \n \t () \/ \" ĺĝğġĥþňńņñĉćċčēėęěéêèëāăąàáãåæäâúùüûôöòóõøœőōĩīįìíîïĵýÿŷç_.-]+$"; break;
           case "alpha_only": reg = "^[a-zA-Z ,;:!?@ \' \" ĺĝğġĥþňńņñĉćċčēėęěéêèëāăąáãåæàäâúùüûôöòóõøœőōĩīįìíîïĵýÿŷç_.-]+$"; break;
           case "login" : reg = "[a-zA-Z0-9]+$"; break;
           case "special" : reg = "^[a-zA-Z0-9]+$"; break;
           case  "email": reg = "[a-zA-Z0-9._-]+@[a-zA-Z-._]+\.[a-z]{2,6}$"; break;
           case  "email-auto": reg = "^[a-zA-Z0-9-._@]+$"; break;
           default: reg = type.trim(); break;
       }
       reg = new RegExp(reg);
       if( !reg || !( elementReturn = reg.test(t.toLowerCase()) ) ){
           elementFromPoint = reg;
       }
    }
   return elementReturn;
}
function empty(guy){
    if (typeof guy != "undefined" && guy != null) {
        for(var p = 0; p < guy.length; p++){
            if( guy[p] != "" && guy[p] != " "){
                return false;
            }
         }
        return true;
    }	 
    return null;
}
function limit(s,l) {
    var born = l.split(","),d = born[0]*1,e = born[1]*1,t = s.length,a = true;
    d = (d == NaN)?0:d;e = (e == NaN)?0:e;
    switch (born.length) {
        case 1:
            if(t < d){a = false;}
            break;
        default:
            if (d > e) {var m = d; d = e;e = m;} if (t < d || t > e) {a = false;}
            break;
    }
    return a;
}
function autoControle(el,d) {
    
    var o = (el.indexOf("#") == 0)?document.querySelector(el):document.querySelectorAll(el);
    if(o != null && typeof o != "undefined" && typeof d == "object" && typeof d.e != "undefined"){
        d.e = typeof d.e == "string"?[d.e]:d.e;
        o = (o.length == 0 || typeof o.length == "undefined" || typeof o.length == null)?[o]:o;
       for (var i = 0; i < o.length; i++) {
            var cur = o[i];
            for (var g = 0; g < d.e.length; g++) {
                if (cur.length != 0) {
                    cur.addEventListener(d.e[g].trim(),function(e) {
                        var value = this.value,pb = false;
                        if(typeof d.type != "undefined" && !contentType(value,d.type)){
                            pb = true;
                            var val = "";
                            for (var x = 0; x < value.length; x++) {
                                val += (contentType(value[x],d.type))?value[x]:"";
                            }
                            this.value = val;
                        }
                        if( typeof d.limit != "undefined" && !limit(value,d.limit) ){
                            pb = true;
                            var limm = d.limit.split(",");
                            limm = limm.length<2?limm[0]:(empty(limm[1])?limm[0]:limm[1]);
                            setLimitChar(this,limm);
                        }
                        if(typeof d.action == "function"){
                            d.action(this);
                        }
                    });
                }
            }
       }
    }
}
function setLimitChar(a,b) {
    var h = a.value,n = "";
    for (var x = 0; x < b; x++) {
        n += typeof h[x] != "undefined"?h[x]:"";
    }
    a.value = n;
}
function disable_champ(papa,action) {
    var all = ["input","select","textarea","button"];

    for (i = 0; i < all.length; i++) {
        var el = document.querySelectorAll("#"+papa+" "+all[i]);
        for (y = 0; y < el.length; y++) {
            action?el[y].setAttribute("disabled",action):el[y].removeAttribute("disabled");
        }
    }
}
function makError(s) {
    for(var key in s){
        if (key != "reponse") {
            $("#"+key).css({borderColor : "#fb0000"}).parent().children().eq(0).css({color : "#fb0000"});
        }
    }
}
function request(h) {
    if(typeof h.link == "string" && typeof h.data == "object"){
        $.ajax({
            url : h.link,
            data : h.data,
            type : "POST",
            dataType : "JSON",
            success : function(r){
                (typeof h.success == "function")?h.success(r):console.log(r);
            }
        }) 
    }
    else{console.log(h);}
}
function wait(a,d) {
    var p1,p;
    if (typeof a != "undefined" && a == "open") {
        var L ,T,span = $("<span class='text_option'>");
        p1 = $("<div id='wait_operation' class='rounded'>");p = $("<div id='wait_operation_back'>");
        if (typeof d != "undefined" && typeof d.html != "undefined") {
            p1.html(d.html);
        }
        else{
            p1.append(span.text(typeof d.text != "undefined"?d.text:"..."));
        }
        $("body").append(p).append(p1).css({overflowY : "hidden"});
        L = ($(window).width() - p1.width())/2;T = ($(window).height() - p1.height())/2;
        p1.css({left : L+"px",top : T+"px"}).fadeIn();
        p.fadeIn();
    }
    else{
        p1 = $("#wait_operation"),p = $("#wait_operation_back")
        p1.fadeOut(function() {p.fadeOut(function() {
            p1.remove();
            p.remove();
            $("body").css({overflowY : "auto"});
        });});
    }
    return [p1,p];
}
function reposition_wait(p,s = 100) {
    var T = ((window.screen.height - p.height()-s)/2),L = ((window.screen.width - p.width())/2);
    T = T>0?T:20;
    L = L>0?L:0;
    p.css({top : T+"px",left : L+"px"});
}
function CountNewBox() {
    var dp = $(".count_new_box");
    if (dp.length != 0) {
        request({link : "/box/discussion/",data : {action : "countNewBox"},success : function(ans){
            if (ans.status == 200) {
                dp.text(ans.data).hide();
                if (ans.data > 0) {dp.show();}
            }
        }})
    }
}
function inArray(text = "",array = []) {
    var a = false;
    if (typeof array == "object" && typeof array[text] != "undefined") {a = true;}
    else{for (let i = 0; i < array.length; i++) {if (array[i] == text && !a) {a = true;}}}
    return a;
}
$(function(){
    CountNewBox();
    setInterval(function() {CountNewBox();},2000);
});
